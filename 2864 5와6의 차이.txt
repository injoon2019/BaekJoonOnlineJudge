문제
상근이는 2863번에서 표를 너무 열심히 돌린 나머지 5와 6을 헷갈리기 시작했다.

싱근이가 숫자 5를 볼 때, 5로 볼 때도 있지만, 6으로 잘못 볼 수도 있고, 6을 볼 때는, 6으로 볼 때도 있지만, 5로 잘못 볼 수도 있다.

두 수 A와 B가 주어졌을 때, 상근이는 이 두 수를 더하려고 한다. 이 때, 상근이가 구할 수 있는 두 수의 가능한 합 중, 최소값과 최대값을 구해 출력하는 프로그램을 작성하시오.

입력
첫째 줄에 두 정수 A와 B가 주어진다. (1 <= A,B <= 1,000,000)

출력
첫째 줄에 상근이가 구할 수 있는 두 수의 합 중 최소값과 최대값을 출력한다.

#include <iostream>
#include <iomanip>
#include <string>
using namespace std;


int main(void)
{
	int num1 ,num2;
	char numlist1[8] = { '\0' };
	char numlist2[8] = { '\0' };
	int i = 0;
	int minimum = 0, maximum = 0;
	cin >> num1 >> num2;
	sprintf(numlist1, "%d", num1);
	sprintf(numlist2, "%d", num2);
	while (numlist1[i] != '\0')
	{
		if (numlist1[i] == '5')
		{
			numlist1[i] = '6';
			maximum += (numlist1[i]-48) * pow(10, strlen(numlist1)- i-1);
		}
		else
			maximum += (numlist1[i] - 48) * pow(10, strlen(numlist1) - i - 1);
		i++;
	}
	i = 0;
	while (numlist2[i] != '\0')
	{
		if (numlist2[i] == '5')
		{
			numlist2[i] = '6';
			maximum += (numlist2[i] - 48) * pow(10, strlen(numlist2) - i-1);
		}
		else
			maximum += (numlist2[i] - 48) * pow(10, strlen(numlist2) - i - 1);
		i++;
	}
	i = 0;
	while (numlist1[i] != '\0')
	{
		if (numlist1[i] == '6')
		{
			numlist1[i] = '5';
			minimum += (numlist1[i] - 48) * pow(10, strlen(numlist1) - i-1);
		}
		else
			minimum += (numlist1[i] - 48) * pow(10, strlen(numlist1) - i - 1);
		i++;
	}
	i = 0;
	while (numlist2[i] != '\0')
	{
		if (numlist2[i] == '6')
		{
			numlist2[i] = '5';
			minimum += (numlist2[i] - 48) * pow(10, strlen(numlist2) - i-1);
		}
		else
			minimum += (numlist2[i] - 48) * pow(10, strlen(numlist2) - i - 1);
		i++;
	}
	cout << minimum << "\n";
	cout << maximum;
	system("pause");
	return 0;
}