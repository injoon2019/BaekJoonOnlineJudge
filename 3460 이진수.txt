문제
양의 정수 n이 주어졌을 때, 이를 이진수로 나타냈을 때 1의 위치를 모두 찾는 프로그램을 작성하시오. 최하위 비트(least significant bit, lsb)의 위치는 0이다.

입력
첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, n이 주어진다. (1 ≤ T ≤ 10, 1 ≤ n ≤ 106)

출력
각 테스트 케이스에 대해서, 1의 위치를 공백으로 구분해서 줄 하나에 출력한다. 위치가 낮은 것부터 출력한다.

예제 입력 1 
1
13
예제 출력 1 
0 2 3






#include <cstdio>

int main() {
	int t, n, c;
	scanf("%d", &t);
	while (t--) {
		scanf("%d", &n);
		c = 0;
		while (n > 0) {
			if (n % 2) printf("%d ", c);
			n /= 2;
			c++;
		}
		printf("\n");
	}

	return 0;
}




#include <iostream>
#include <iomanip>
#include <string>
#include <algorithm>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <vector>
using namespace std;



int main(void)
{
	
	int testCase, number;
	int remainder;
	cin >> testCase;
	while (testCase--)
	{
		int binary[100] ;
		for (int i = 0; i<100; i++)
		{
			binary[i]= -1;
		}
		int i = 0;
		int k = 0;
		cin >> number;
		while (number)
		{
			remainder = number % 2;
			if (remainder == 1)
			{
				binary[i] = k;
				i++;
			}
			number = number / 2;
			k++;
		}
		for (int i = 0; binary[i] != -1 ; i++)
		{
			cout << binary[i] << " ";
		}
	}
	system("pause");
	return 0;
}
